## Envs
export CLICOLOR=1
export LSCOLORS="ExGxFxdxCxDxDxhbadExEx"
export HISTCONTROL=erasedups
export HISTSIZE=10000
shopt -s histappend

export GOPATH=$HOME/.golang
# OS X: modify /etc/paths to make '/usr/local/bin' be the first one
# GOROOT/bin: /usr/local/opt/go/libexec/bin
PATH=$PATH:$HOME/bin:$GOPATH/bin:/usr/local/opt/go/libexec/bin:/usr/texbin:/opt/local/bin

# Pebble SDK
PATH=$PATH:/Users/simple/pebble/sdk/bin

export PATH

export JAVA_HOME="$(/usr/libexec/java_home)"


## Aliases
alias ls='ls -FGH'
alias gb='git branch'
alias gba='git branch -a'
alias gc='git commit -v'
alias gd='git difftool'
alias gl='git pull'
alias gp='git push'
alias gst='git status'
alias git-aliases='alias | grep git'
alias win7='open "$HOME/VirtualBox VMs/win7/win7.vbox"'
alias ubuntu="VBoxManage startvm ubuntu15.04 --type headless"
alias ubuntu-stop="VBoxManage controlvm ubuntu15.04 poweroff"

## Prompt settings
[[ -s "$PRF/prompt_resources" ]] && source $PRF/prompt_resources
function rvmps1 {
	rp=$(rvm-prompt v g)
	[[ $rp =~ "@" ]] && printf "%s" "$(emoji rocket) ($rp)"
}
function venvps1 {
	[[ -z $VIRTUAL_ENV ]] || printf "%s" "$(emoji snake) ($(basename $VIRTUAL_ENV))"
}
function envs_prompt {
	[[ -z "$(rvmps1)$(venvps1)" ]] || printf "%s" "$(rvmps1)$(venvps1) "
}
function ps1_from_exit_status {
	if [ $1 -eq 0 ]; then face=$(emoji yheart); else face=$(emoji scream); fi
	printf "\n$EBLACK[$(date +'%H:%M:%S')]$ERED@$(hostname -s):$NO_COLOR"
	printf "$(pwd | sed -e 's@/Users/simple@~@') "
	printf "$EGREEN$(vcprompt -f "[%b%u%m@%r]")$NO_COLOR\n"
	printf "$(envs_prompt)$face  "
}
PS1="\$(ps1_from_exit_status \$?)"
PS2="$ARROW18 "
export VIRTUAL_ENV_DISABLE_PROMPT=1

## Load secrets
[[ -s "$PRF/secrets" ]] && source "$PRF/secrets"

## Configure tools
PATH=$HOME/.rvm/bin:$PATH
[[ -s "$HOME/.rvm/scripts/rvm" ]] && source "$HOME/.rvm/scripts/rvm"

## git completion
GIT_COMPLETION_FILE=/usr/local/etc/bash_completion.d/git-completion.bash
[[ -s $GIT_COMPLETION_FILE ]] && source $GIT_COMPLETION_FILE

# virtualenvwrapper
[[ -s "/usr/local/bin/virtualenvwrapper.sh" ]] && source "/usr/local/bin/virtualenvwrapper.sh"

# virtualenv settings from hackercodex.com
# http://hackercodex.com/guide/python-virtualenv-on-mac-osx-mountain-lion-10.8/

# virtualenv should use Distribute instead of legacy setuptools
export VIRTUALENV_DISTRIBUTE=true
# Centralized location for new virtual environments
export PIP_VIRTUALENV_BASE=$HOME/Virtualenvs
# pip should only run if there is a virtualenv currently activated
export PIP_REQUIRE_VIRTUALENV=true

function syspip() {
	PIP_REQUIRE_VIRTUALENV="" pip "$@"
}

ANDROID_HOME=/usr/local/opt/android-sdk

export LC_ALL=ko_KR.UTF-8
export LANG=ko_KR.UTF-8

## { custom functions for command line use.
function mkpasswd {
    re='^[0-9]+$'
    if [[ $1 =~ $re && $1 -ge 10 && $1 -le 20 ]]; then
        length=$1
    else
        length=15
    fi
    openssl rand -base64 $length
}

function mkpasswds {
    for i in $(seq 1 10); do
        mkpasswd $1
    done
}
## }
